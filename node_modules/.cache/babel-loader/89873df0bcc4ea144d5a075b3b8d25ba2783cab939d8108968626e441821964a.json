{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Project_inter\\\\animes\\\\src\\\\contexte\\\\AnimeContexte.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer, useState } from \"react\";\nimport axios from \"axios\";\nimport AnimeReducer from \"./AnimeReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AnimeContexte = /*#__PURE__*/createContext();\nconst AnimeProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [dataTable, setDataTable] = useState([]);\n  const [data, setData] = useState([]);\n  const [loading2, setLoading2] = useState(false);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const Url = \"https://kitsu.io/api/edge/\";\n  const initialState = {\n    animes: [],\n    animesbysearch: [],\n    animesbyId: {}\n  };\n  const [animeFavoris, setAnimeFavoris] = useState([]);\n  const [state, dispatch] = useReducer(AnimeReducer, initialState);\n  const fetchData = async () => {\n    setLoading2(true);\n    try {\n      const response = await fetch(`${Url}anime?page[limit]=5&page[offset]=${page}`);\n      const result = await response.json();\n      setDataTable(dataTable.concat(result.data));\n      setHasMore(result.data.length > 0);\n      setLoading2(false);\n      console.log(\" ttt\", dataTable);\n      dispatch({\n        type: \"GET_ANIMES\",\n        payload: response.data.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading2(false);\n  };\n  const fetchAnime = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${Url}anime?page[limit]=10&page[offset]=0`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/vnd.api+json\",\n          Accept: \"application/vnd.api+json\"\n        }\n      });\n      console.log(\"adventur adventure\", response.data.data);\n      // dispatch({\n      //   type: \"GET_ANIMES\",\n      //   payload: response.data.data,\n      // });\n      console.log(\"rr\", response.data.data);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const fetchBySearch = async x => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${Url}anime?filter[text]==${x}`);\n      console.log(response.data.data);\n      dispatch({\n        type: \"GET_BYSEARCH\",\n        payload: response.data.data\n      });\n      console.log(response.data.data);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const fetchById = async id => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${Url}anime/${id}`);\n      dispatch({\n        type: \"GET_BYID\",\n        payload: response.data.data\n      });\n      console.log(\"anime\", response.data.data);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const clearAnimebyId = () => {\n    dispatch({\n      type: \"CLEAR_GETBYID\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AnimeContexte.Provider, {\n    value: {\n      data,\n      setData,\n      page,\n      setPage,\n      hasMore,\n      setHasMore,\n      fetchData,\n      dataTable,\n      setDataTable,\n      loading,\n      fetchById,\n      fetchAnime,\n      animes: state.animes,\n      fetchBySearch,\n      animesbysearch: state.animesbysearch,\n      animesbyId: state.animesbyId,\n      clearAnimebyId,\n      animeFavoris,\n      setAnimeFavoris\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimeProvider, \"M8RXINwfoivAmgKQhTVtbJeRrIA=\");\n_c = AnimeProvider;\nexport default AnimeProvider;\nvar _c;\n$RefreshReg$(_c, \"AnimeProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useState","axios","AnimeReducer","AnimeContexte","AnimeProvider","children","dataTable","setDataTable","data","setData","loading2","setLoading2","page","setPage","hasMore","setHasMore","loading","setLoading","Url","initialState","animes","animesbysearch","animesbyId","animeFavoris","setAnimeFavoris","state","dispatch","fetchData","response","fetch","result","json","concat","length","console","log","type","payload","error","fetchAnime","get","method","headers","Accept","fetchBySearch","x","fetchById","id","clearAnimebyId"],"sources":["C:/Users/dell/Desktop/Project_inter/animes/src/contexte/AnimeContexte.jsx"],"sourcesContent":["import React, { createContext, useReducer, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport AnimeReducer from \"./AnimeReducer\";\r\n\r\nexport const AnimeContexte = createContext();\r\n\r\nconst AnimeProvider = ({ children }) => {\r\n  const [dataTable, setDataTable] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [loading2, setLoading2] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [hasMore, setHasMore] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const Url = \"https://kitsu.io/api/edge/\";\r\n\r\n  const initialState = {\r\n    animes: [],\r\n    animesbysearch: [],\r\n    animesbyId: {},\r\n  };\r\n  const [animeFavoris, setAnimeFavoris] = useState([]);\r\n\r\n  const [state, dispatch] = useReducer(AnimeReducer, initialState);\r\n\r\n  const fetchData = async () => {\r\n    setLoading2(true);\r\n    try {\r\n      const response = await fetch(\r\n        `${Url}anime?page[limit]=5&page[offset]=${page}`\r\n      );\r\n      const result = await response.json();\r\n      setDataTable(dataTable.concat(result.data));\r\n      setHasMore(result.data.length > 0);\r\n      setLoading2(false);\r\n      console.log(\" ttt\", dataTable);\r\n      dispatch({\r\n        type: \"GET_ANIMES\",\r\n        payload: response.data.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading2(false);\r\n  };\r\n\r\n  const fetchAnime = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `${Url}anime?page[limit]=10&page[offset]=0`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/vnd.api+json\",\r\n            Accept: \"application/vnd.api+json\",\r\n          },\r\n        }\r\n      );\r\n      console.log(\"adventur adventure\", response.data.data);\r\n      // dispatch({\r\n      //   type: \"GET_ANIMES\",\r\n      //   payload: response.data.data,\r\n      // });\r\n      console.log(\"rr\", response.data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchBySearch = async (x) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`${Url}anime?filter[text]==${x}`);\r\n      console.log(response.data.data);\r\n      dispatch({\r\n        type: \"GET_BYSEARCH\",\r\n        payload: response.data.data,\r\n      });\r\n      console.log(response.data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchById = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`${Url}anime/${id}`);\r\n      dispatch({\r\n        type: \"GET_BYID\",\r\n        payload: response.data.data,\r\n      });\r\n      console.log(\"anime\", response.data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const clearAnimebyId = () => {\r\n    dispatch({ type: \"CLEAR_GETBYID\" });\r\n  };\r\n\r\n  return (\r\n    <AnimeContexte.Provider\r\n      value={{\r\n        data,\r\n        setData,\r\n        page,\r\n        setPage,\r\n        hasMore,\r\n        setHasMore,\r\n        fetchData,\r\n        dataTable,\r\n        setDataTable,\r\n        loading,\r\n        fetchById,\r\n        fetchAnime,\r\n        animes: state.animes,\r\n        fetchBySearch,\r\n        animesbysearch: state.animesbysearch,\r\n        animesbyId: state.animesbyId,\r\n        clearAnimebyId,\r\n        animeFavoris,\r\n        setAnimeFavoris,\r\n      }}\r\n    >\r\n      {children}\r\n    </AnimeContexte.Provider>\r\n  );\r\n};\r\n\r\nexport default AnimeProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}